// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–∂–µ—Ç–æ–≤ –¥–ª—è LEGO Catalog PWA
class WidgetHandler {
    constructor() {
        this.statsData = null;
        this.init();
        
        // –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –≤–∏–¥–∂–µ—Ç–æ–≤
        window.addEventListener('message', (event) => {
            this.handleWidgetMessage(event);
        });
    }
    
    async init() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        await this.loadStatsData();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã
        setInterval(() => {
            this.updateAllWidgets();
        }, 2 * 60 * 1000);
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤–∏–¥–∂–µ—Ç—ã –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        this.notifyWidgets();
    }
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤–∏–¥–∂–µ—Ç—ã –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    notifyWidgets() {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        window.dispatchEvent(new CustomEvent('widgetDataUpdated', {
            detail: {
                statsData: this.statsData
            }
        }));
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º iframe –≤–∏–¥–∂–µ—Ç–∞–º
        const iframes = document.querySelectorAll('iframe');
        iframes.forEach(iframe => {
            try {
                iframe.contentWindow.postMessage({
                    type: 'widgetData',
                    statsData: this.statsData
                }, '*');
            } catch (error) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ iframe –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –≤–∏–¥–∂–µ—Ç–æ–≤
    handleWidgetMessage(event) {
        if (event.data && event.data.type === 'getWidgetData') {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤–∏–¥–∂–µ—Ç—É
            event.source.postMessage({
                type: 'widgetData',
                statsData: this.statsData
            }, event.origin);
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –≤–∏–¥–∂–µ—Ç—ã
    async updateAllWidgets() {
        await this.loadStatsData();
        this.notifyWidgets();
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    async loadStatsData() {
        try {
            const partsCollection = this.getLocalStorageData('legoCollection') || {};
            const setsCollection = this.getLocalStorageData('legoSetCollection') || {};
            const minifigsCollection = this.getLocalStorageData('legoMinifigCollection') || {};
            const favoriteThemes = this.getLocalStorageData('favoriteThemeIds') || [];
            
            // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            // –î–ª—è –¥–µ—Ç–∞–ª–µ–π: —Å—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–∞–ª–µ–π (—Å—É–º–º–∞ –ø–æ –≤—Å–µ–º —Ü–≤–µ—Ç–∞–º)
            const totalParts = Object.values(partsCollection).reduce((sum, part) => {
                return sum + Object.values(part).reduce((partSum, qty) => partSum + qty, 0);
            }, 0);
            
            // –î–ª—è –Ω–∞–±–æ—Ä–æ–≤: —Å—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–±–æ—Ä–æ–≤
            const totalSets = Object.values(setsCollection).reduce((sum, set) => sum + (set.qty || 0), 0);
            
            // –î–ª—è –º–∏–Ω–∏—Ñ–∏–≥—É—Ä–æ–∫: —Å—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω–∏—Ñ–∏–≥—É—Ä–æ–∫
            const totalMinifigs = Object.values(minifigsCollection).reduce((sum, minifig) => sum + (minifig.qty || 0), 0);
            
            // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            const uniqueParts = Object.keys(partsCollection).length;
            const uniqueSets = Object.keys(setsCollection).length;
            const uniqueMinifigs = Object.keys(minifigsCollection).length;
            
            // –î–ª—è —Ç–µ–º: —Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–µ–º
            const totalThemes = Array.isArray(favoriteThemes) ? favoriteThemes.length : 0;
            
            this.statsData = {
                totalSets: totalSets,
                totalParts: totalParts,
                totalMinifigs: totalMinifigs,
                uniqueSets: uniqueSets,
                uniqueParts: uniqueParts,
                uniqueMinifigs: uniqueMinifigs,
                totalThemes: totalThemes,
                lastUpdated: new Date().toISOString(),
                version: "1.0.0"
            };
            
            console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', this.statsData);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            this.statsData = {
                totalSets: 0,
                totalParts: 0,
                totalMinifigs: 0,
                uniqueSets: 0,
                uniqueParts: 0,
                uniqueMinifigs: 0,
                totalThemes: 0,
                lastUpdated: new Date().toISOString(),
                version: "1.0.0"
            };
        }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    async saveStatsData() {
        try {
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø–∞–º—è—Ç–∏
            this.statsData.lastUpdated = new Date().toISOString();
            console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ –ø–∞–º—è—Ç–∏:', this.statsData);
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤–∏–¥–∂–µ—Ç—ã –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
            this.notifyWidgets();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
    getLocalStorageData(key) {
        try {
            const data = localStorage.getItem(key);
            return data ? JSON.parse(data) : null;
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è ${key} –∏–∑ localStorage:`, error);
            return null;
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤–∏–¥–∂–µ—Ç–æ–≤
window.widgetHandler = new WidgetHandler();